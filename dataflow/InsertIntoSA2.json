{
	"name": "InsertIntoSA2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "NicknamesXLSX",
						"type": "DatasetReference"
					},
					"name": "ReadXLSX"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "Nicknames_SA_Table",
						"type": "DatasetReference"
					},
					"name": "InsertIntoSA"
				}
			],
			"transformations": [
				{
					"name": "SetLoadIdColumn"
				}
			],
			"scriptLines": [
				"parameters{",
				"     loadid as string",
				"}",
				"source(output(",
				"          {Given Name} as string,",
				"          {Top Nickname} as string,",
				"          {All Nicknames} as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> ReadXLSX",
				"ReadXLSX derive(LoadID = toInteger($loadid),",
				"          ClassName = \"Nickname\") ~> SetLoadIdColumn",
				"SetLoadIdColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          B_LOADID as decimal(38,0),",
				"          GIVEN_NAME as string,",
				"          B_CLASSNAME as string,",
				"          B_ERROR_STATUS as string,",
				"          B_ORIGINALBATCHID as decimal(38,0),",
				"          B_OPERATIONID as string,",
				"          B_DUPSOPERATIONID as decimal(38,0),",
				"          B_DUPSMERGETARGET as string,",
				"          B_DELETETYPE as string,",
				"          B_DELETEDATE as timestamp,",
				"          B_DELETEAUTHOR as string,",
				"          B_DELETEOPERATION as string,",
				"          B_DELETEPATH as string,",
				"          B_COPIEDFROM as string,",
				"          B_CREDATE as timestamp,",
				"          B_UPDDATE as timestamp,",
				"          B_CREATOR as string,",
				"          B_UPDATOR as string,",
				"          TOP_NICKNAME as string,",
				"          ALL_NICKNAMES as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          B_LOADID = LoadID,",
				"          GIVEN_NAME = {Given Name},",
				"          B_CLASSNAME = ClassName,",
				"          TOP_NICKNAME = {Top Nickname},",
				"          ALL_NICKNAMES = {All Nicknames}",
				"     )) ~> InsertIntoSA"
			]
		}
	}
}